# Perform a full release of the applications in the monorepo
#
# This does not account for splash/kvittering as these are deployed directly to prod on push

name: Manual Release
on:
  workflow_dispatch:
    inputs:
      git-hash:
        description: 'Git hash to release (leave empty to use latest on main)'
        required: false

concurrency:
  group: production
  cancel-in-progress: true

env:
  DEPLOYMENT_TARGET_HASH: ${{ github.event.inputs.git-hash || github.sha }}

permissions:
  id-token: write
  contents: read
jobs:
  # The "check" job is responsible for verifying the minimum requirements to
  # build all the packages in the monorepo.
  check:
    name: Verify build requirements
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - uses: pnpm/action-setup@v2
        with:
          version: 9.15.5
      - uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
        name: Install dependencies from pnpm lockfile
      - run: pnpm lint-check
        name: Run linting and formatting checks
      - run: pnpm type-check
        name: Run TypeScript type checker

  build-brevduen:
    name: brevduen
    runs-on: ubuntu-24.04
    needs:
      - check
    steps:
      - name: Install local GitHub Actions
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: '.github'
          sparse-checkout-cone-mode: true
      - uses: ./.github/actions/build-brevduen
        with:
          deploy: true
          environment: prd
          git-hash: ${{ env.DEPLOYMENT_TARGET_HASH }}

  build-dashboard:
    name: dashboard
    runs-on: ubuntu-24.04
    needs:
      - check
    steps:
      - name: Install local GitHub Actions
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: '.github'
          sparse-checkout-cone-mode: true
      - uses: ./.github/actions/build-dashboard
        with:
          deploy: true
          environment: prd
          git-hash: ${{ env.DEPLOYMENT_TARGET_HASH }}

  build-invoicification:
    name: invoicification
    runs-on: ubuntu-24.04
    needs:
      - check
    steps:
      - name: Install local GitHub Actions
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: '.github'
          sparse-checkout-cone-mode: true
      - uses: ./.github/actions/build-invoicification
        with:
          deploy: true
          environment: prd
          git-hash: ${{ env.DEPLOYMENT_TARGET_HASH }}

  build-rif:
    name: rif
    runs-on: ubuntu-24.04
    needs:
      - check
    steps:
      - name: Install local GitHub Actions
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: '.github'
          sparse-checkout-cone-mode: true
      - uses: ./.github/actions/build-rif
        with:
          deploy: true
          environment: prd
          git-hash: ${{ env.DEPLOYMENT_TARGET_HASH }}

  build-rpc:
    name: rpc
    runs-on: ubuntu-24.04
    needs:
      - check
    steps:
      - name: Install local GitHub Actions
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: '.github'
          sparse-checkout-cone-mode: true
      - uses: ./.github/actions/build-rpc
        with:
          deploy: true
          environment: prd
          git-hash: ${{ env.DEPLOYMENT_TARGET_HASH }}

  build-web:
    name: web
    runs-on: ubuntu-24.04
    needs:
      - check
    steps:
      - name: Install local GitHub Actions
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: '.github'
          sparse-checkout-cone-mode: true
      - uses: ./.github/actions/build-web
        with:
          deploy: true
          environment: prd
          git-hash: ${{ env.DEPLOYMENT_TARGET_HASH }}
