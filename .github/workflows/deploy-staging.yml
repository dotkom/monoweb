name: Staging deployment
on:
  push:
    branches:
      - main

permissions:
  id-token: write   
  contents: read
jobs:
  deploy-rpc:
    name: Deploy monoweb/rpc
    runs-on: ubuntu-24.04
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-north-1
          role-to-assume: arn:aws:iam::891459268445:role/MonowebStagingRPCCIRole
      - uses: aws-actions/amazon-ecr-login@v2
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: .
          file: apps/rpc/Dockerfile
          tags: 891459268445.dkr.ecr.eu-north-1.amazonaws.com/monoweb/staging/rpc:latest
          push: true
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TERRAFORM_WORKFLOW_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'dotkom',
              repo: 'terraform-monorepo',
              workflow_id: 'apply.yml',
              ref: 'main',
              inputs: {
                environment: 'staging',
                project: 'monoweb-rpc',
                targets: 'module.rpc_evergreen_service',
              },
            });

  deploy-brevduen:
    name: Deploy monoweb/brevduen
    runs-on: ubuntu-24.04
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-north-1
          role-to-assume: arn:aws:iam::891459268445:role/MonowebStagingBrevduenCIRole
      - uses: aws-actions/amazon-ecr-login@v2
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: .
          file: apps/brevduen/Dockerfile
          tags: 891459268445.dkr.ecr.eu-north-1.amazonaws.com/monoweb/staging/brevduen:latest
          push: true
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TERRAFORM_WORKFLOW_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'dotkom',
              repo: 'terraform-monorepo',
              workflow_id: 'apply.yml',
              ref: 'main',
              inputs: {
                environment: 'staging',
                project: 'monoweb-brevduen',
                targets: 'module.brevduen_evergreen_service',
              },
            });

  deploy-dashboard:
    name: Deploy monoweb/dashboard
    runs-on: ubuntu-24.04
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-north-1
          role-to-assume: arn:aws:iam::891459268445:role/MonowebStagingDashboardCIRole
      - uses: aws-actions/amazon-ecr-login@v2
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: .
          file: apps/dashboard/Dockerfile
          tags: 891459268445.dkr.ecr.eu-north-1.amazonaws.com/monoweb/staging/dashboard:latest
          push: true
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TERRAFORM_WORKFLOW_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'dotkom',
              repo: 'terraform-monorepo',
              workflow_id: 'apply.yml',
              ref: 'main',
              inputs: {
                environment: 'staging',
                project: 'monoweb-dashboard',
                targets: 'module.dashboard_evergreen_service',
              },
            });
